id: request
namespace: sanitycheck.plugin.elasticsearch

inputs:
  - id: cs
    type: STRING
    defaults: "http://localhost:9200"

variables:
  index_name: request_index

tasks:

  - id: create_index
    type: io.kestra.plugin.elasticsearch.Request
    connection:
      hosts:
        - "{{ inputs.cs }}"
    method: "PUT"
    endpoint: "{{ vars.index_name }}"
    body: |
      {
        "settings": {
          "number_of_shards": 1,
          "number_of_replicas": 1
        }
      }

  - id: index_document
    type: io.kestra.plugin.elasticsearch.Request
    connection:
      hosts:
        - "{{ inputs.cs }}"
    method: "POST"
    endpoint: "{{ vars.index_name }}/_doc/1?refresh=wait_for"
    body: |
      {
        "name": "John"
      }

  - id: get_document
    type: io.kestra.plugin.elasticsearch.Request
    connection:
      hosts:
        - "{{ inputs.cs }}"
    method: "GET"
    endpoint: "{{ vars.index_name }}/_doc/1"

  - id: assert
    type: io.kestra.plugin.core.execution.Assert
    errorMessage: "Invalid request {{ outputs.get_document.response }}"
    conditions:
      - "{{ outputs.get_document.status == 200 }}"
      - "{{ outputs.get_document.response._source.name == 'John' }}"