id: load
namespace: sanitycheck.plugin.elasticsearch

inputs:
  - id: cs
    type: STRING
    defaults: "http://localhost:9200"

variables:
  index_name: load_index

tasks:
  - id: create_index
    type: io.kestra.plugin.fs.http.Request
    uri: "{{ inputs.cs }}/{{ vars.index_name }}"
    method: PUT
    contentType: application/json
    body: |
      {
        "settings": {
          "number_of_shards": 1,
          "number_of_replicas": 1
        }
      }

  - id: write
    type: io.kestra.plugin.core.storage.Write
    content: |
      {id:0,name:"john"}
      {id:1,name:"john"}
      {id:2,name:"john"}
      {id:3,name:"john"}
      {id:4,name:"john"}
      {id:5,name:"john"}
      {id:6,name:"john"}
      {id:7,name:"john"}
      {id:8,name:"john"}
      {id:9,name:"john"}
    extension: .ion

  - id: load
    type: io.kestra.plugin.elasticsearch.Load
    connection:
      hosts:
        - "{{ inputs.cs }}"
    from: "{{ outputs.write.uri }}"
    index: "{{ vars.index_name }}"

  - id: refresh_index
    type: io.kestra.plugin.fs.http.Request
    uri: "{{ inputs.cs }}/{{ vars.index_name }}/_refresh"
    method: POST
    contentType: application/json

  - id: count_documents
    type: io.kestra.plugin.fs.http.Request
    uri: "{{ inputs.cs }}/{{ vars.index_name }}/_count"
    method: GET
    contentType: application/json
    body: {}

  - id: assert
    type: io.kestra.plugin.core.execution.Assert
    errorMessage: "Invalid load {{ outputs.load.size }}"
    conditions:
      - "{{ outputs.load.size == 10 }}"
      - "{{ outputs.count_documents.body contains '\"count\":10' }}"